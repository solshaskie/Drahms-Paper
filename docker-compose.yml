version: '3.8'

services:
  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: live-wallpaper-api
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CLIENT_URL=http://localhost:3000
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - RAPIDAPI_KEY=${RAPIDAPI_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - MAX_FILE_SIZE=500000000
      - UPLOAD_PATH=./server/uploads
      - FFMPEG_PATH=/usr/bin/ffmpeg
      - FFPROBE_PATH=/usr/bin/ffprobe
    volumes:
      - ./server/uploads:/app/server/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Development)
  frontend-dev:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: live-wallpaper-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - dev

  # Frontend (Production)
  frontend-prod:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: live-wallpaper-frontend-prod
    ports:
      - "80:80"
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - prod

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: live-wallpaper-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - prod

  # Nginx (reverse proxy for production)
  nginx:
    image: nginx:alpine
    container_name: live-wallpaper-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend-prod
    restart: unless-stopped
    profiles:
      - prod

volumes:
  redis_data:

networks:
  default:
    name: live-wallpaper-network
